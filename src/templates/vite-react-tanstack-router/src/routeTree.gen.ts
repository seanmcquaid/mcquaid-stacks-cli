/* eslint-disable @typescript-eslint/no-explicit-any */
// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router';

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as TanstackRouterIndexImport } from './routes/tanstack-router/index';
import { Route as KitchenSinkIndexImport } from './routes/kitchen-sink/index';

// Create Virtual Routes

const TanstackRouterLazyImport = createFileRoute('/tanstack-router')();
const ReactQueryLazyImport = createFileRoute('/react-query')();
const ReactHookFormZodLazyImport = createFileRoute('/react-hook-form-zod')();
const KitchenSinkLazyImport = createFileRoute('/kitchen-sink')();
const IndexLazyImport = createFileRoute('/')();
const ReactQueryIdLazyImport = createFileRoute('/react-query/$id')();

// Create/Update Routes

const TanstackRouterLazyRoute = TanstackRouterLazyImport.update({
  path: '/tanstack-router',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/tanstack-router/lazy').then(d => d.Route),
);

const ReactQueryLazyRoute = ReactQueryLazyImport.update({
  path: '/react-query',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/react-query/lazy').then(d => d.Route));

const ReactHookFormZodLazyRoute = ReactHookFormZodLazyImport.update({
  path: '/react-hook-form-zod',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/react-hook-form-zod/lazy').then(d => d.Route),
);

const KitchenSinkLazyRoute = KitchenSinkLazyImport.update({
  path: '/kitchen-sink',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/kitchen-sink/lazy').then(d => d.Route));

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index/lazy').then(d => d.Route));

const TanstackRouterIndexRoute = TanstackRouterIndexImport.update({
  path: '/',
  getParentRoute: () => TanstackRouterLazyRoute,
} as any);

const KitchenSinkIndexRoute = KitchenSinkIndexImport.update({
  path: '/',
  getParentRoute: () => KitchenSinkLazyRoute,
} as any);

const ReactQueryIdLazyRoute = ReactQueryIdLazyImport.update({
  path: '/$id',
  getParentRoute: () => ReactQueryLazyRoute,
} as any).lazy(() =>
  import('./routes/react-query/$id/lazy').then(d => d.Route),
);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/kitchen-sink': {
      preLoaderRoute: typeof KitchenSinkLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/react-hook-form-zod': {
      preLoaderRoute: typeof ReactHookFormZodLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/react-query': {
      preLoaderRoute: typeof ReactQueryLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/tanstack-router': {
      preLoaderRoute: typeof TanstackRouterLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/react-query/$id': {
      preLoaderRoute: typeof ReactQueryIdLazyImport;
      parentRoute: typeof ReactQueryLazyImport;
    };
    '/kitchen-sink/': {
      preLoaderRoute: typeof KitchenSinkIndexImport;
      parentRoute: typeof KitchenSinkLazyImport;
    };
    '/tanstack-router/': {
      preLoaderRoute: typeof TanstackRouterIndexImport;
      parentRoute: typeof TanstackRouterLazyImport;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  KitchenSinkLazyRoute.addChildren([KitchenSinkIndexRoute]),
  ReactHookFormZodLazyRoute,
  ReactQueryLazyRoute.addChildren([ReactQueryIdLazyRoute]),
  TanstackRouterLazyRoute.addChildren([TanstackRouterIndexRoute]),
]);
