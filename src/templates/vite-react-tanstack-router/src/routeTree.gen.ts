// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const ReactQueryComponentLazyImport = createFileRoute('/react-query')()
const ReactHookFormZodComponentLazyImport = createFileRoute(
  '/react-hook-form-zod',
)()
const KitchenSinkComponentLazyImport = createFileRoute('/kitchen-sink')()
const TanstackRouterRouteLazyImport = createFileRoute('/tanstack-router')()
const IndexComponentLazyImport = createFileRoute('/')()
const ReactQueryIdRouteLazyImport = createFileRoute('/react-query/$id')()

// Create/Update Routes

const ReactQueryComponentLazyRoute = ReactQueryComponentLazyImport.update({
  path: '/react-query',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/react-query/component.lazy').then((d) => d.Route),
)

const ReactHookFormZodComponentLazyRoute =
  ReactHookFormZodComponentLazyImport.update({
    path: '/react-hook-form-zod',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/react-hook-form-zod/component.lazy').then((d) => d.Route),
  )

const KitchenSinkComponentLazyRoute = KitchenSinkComponentLazyImport.update({
  path: '/kitchen-sink',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/kitchen-sink/loader.lazy').then((d) => d.Route),
)

const TanstackRouterRouteLazyRoute = TanstackRouterRouteLazyImport.update({
  path: '/tanstack-router',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/tanstack-router/component.lazy').then((d) => d.Route),
)

const IndexComponentLazyRoute = IndexComponentLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/index/component.lazy').then((d) => d.Route),
)

const ReactQueryIdRouteLazyRoute = ReactQueryIdRouteLazyImport.update({
  path: '/$id',
  getParentRoute: () => ReactQueryComponentLazyRoute,
} as any).lazy(() =>
  import('./routes/react-query/$id/component.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexComponentLazyImport
      parentRoute: typeof rootRoute
    }
    '/tanstack-router': {
      preLoaderRoute: typeof TanstackRouterRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/kitchen-sink': {
      preLoaderRoute: typeof KitchenSinkComponentLazyImport
      parentRoute: typeof rootRoute
    }
    '/react-hook-form-zod': {
      preLoaderRoute: typeof ReactHookFormZodComponentLazyImport
      parentRoute: typeof rootRoute
    }
    '/react-query': {
      preLoaderRoute: typeof ReactQueryComponentLazyImport
      parentRoute: typeof rootRoute
    }
    '/react-query/$id': {
      preLoaderRoute: typeof ReactQueryIdRouteLazyImport
      parentRoute: typeof ReactQueryComponentLazyImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexComponentLazyRoute,
  TanstackRouterRouteLazyRoute,
  KitchenSinkComponentLazyRoute,
  ReactHookFormZodComponentLazyRoute,
  ReactQueryComponentLazyRoute.addChildren([ReactQueryIdRouteLazyRoute]),
])
