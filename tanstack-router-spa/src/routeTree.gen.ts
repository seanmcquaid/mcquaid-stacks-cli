/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router';

// Import Routes

import { Route as rootRoute } from './routes/__root';

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')();
const ReactQueryIndexLazyImport = createFileRoute('/react-query/')();
const ReactHookFormZodIndexLazyImport = createFileRoute(
  '/react-hook-form-zod/',
)();
const ReactQueryIdIndexLazyImport = createFileRoute('/react-query/$id/')();

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then(d => d.Route));

const ReactQueryIndexLazyRoute = ReactQueryIndexLazyImport.update({
  id: '/react-query/',
  path: '/react-query/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/react-query/index.lazy').then(d => d.Route),
);

const ReactHookFormZodIndexLazyRoute = ReactHookFormZodIndexLazyImport.update({
  id: '/react-hook-form-zod/',
  path: '/react-hook-form-zod/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/react-hook-form-zod/index.lazy').then(d => d.Route),
);

const ReactQueryIdIndexLazyRoute = ReactQueryIdIndexLazyImport.update({
  id: '/react-query/$id/',
  path: '/react-query/$id/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/react-query/$id/index.lazy').then(d => d.Route),
);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/react-hook-form-zod/': {
      id: '/react-hook-form-zod/';
      path: '/react-hook-form-zod';
      fullPath: '/react-hook-form-zod';
      preLoaderRoute: typeof ReactHookFormZodIndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/react-query/': {
      id: '/react-query/';
      path: '/react-query';
      fullPath: '/react-query';
      preLoaderRoute: typeof ReactQueryIndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/react-query/$id/': {
      id: '/react-query/$id/';
      path: '/react-query/$id';
      fullPath: '/react-query/$id';
      preLoaderRoute: typeof ReactQueryIdIndexLazyImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute;
  '/react-hook-form-zod': typeof ReactHookFormZodIndexLazyRoute;
  '/react-query': typeof ReactQueryIndexLazyRoute;
  '/react-query/$id': typeof ReactQueryIdIndexLazyRoute;
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute;
  '/react-hook-form-zod': typeof ReactHookFormZodIndexLazyRoute;
  '/react-query': typeof ReactQueryIndexLazyRoute;
  '/react-query/$id': typeof ReactQueryIdIndexLazyRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/': typeof IndexLazyRoute;
  '/react-hook-form-zod/': typeof ReactHookFormZodIndexLazyRoute;
  '/react-query/': typeof ReactQueryIndexLazyRoute;
  '/react-query/$id/': typeof ReactQueryIdIndexLazyRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: '/' | '/react-hook-form-zod' | '/react-query' | '/react-query/$id';
  fileRoutesByTo: FileRoutesByTo;
  to: '/' | '/react-hook-form-zod' | '/react-query' | '/react-query/$id';
  id:
    | '__root__'
    | '/'
    | '/react-hook-form-zod/'
    | '/react-query/'
    | '/react-query/$id/';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute;
  ReactHookFormZodIndexLazyRoute: typeof ReactHookFormZodIndexLazyRoute;
  ReactQueryIndexLazyRoute: typeof ReactQueryIndexLazyRoute;
  ReactQueryIdIndexLazyRoute: typeof ReactQueryIdIndexLazyRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  ReactHookFormZodIndexLazyRoute: ReactHookFormZodIndexLazyRoute,
  ReactQueryIndexLazyRoute: ReactQueryIndexLazyRoute,
  ReactQueryIdIndexLazyRoute: ReactQueryIdIndexLazyRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/react-hook-form-zod/",
        "/react-query/",
        "/react-query/$id/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/react-hook-form-zod/": {
      "filePath": "react-hook-form-zod/index.lazy.tsx"
    },
    "/react-query/": {
      "filePath": "react-query/index.lazy.tsx"
    },
    "/react-query/$id/": {
      "filePath": "react-query/$id/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
